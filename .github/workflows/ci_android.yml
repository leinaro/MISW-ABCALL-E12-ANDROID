name: Android CI

on:
  pull_request:
    branches:
      - '**'

jobs:
  # Job 1: Build
  build:
    runs-on: ubuntu-latest

    steps:
      # Configura Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache Gradle files
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Configura Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: '33.0.0'
          cmake-version: '3.10.2'

      # Compilar proyecto
      - name: Build project
        run: ./gradlew build --no-daemon

  # Job 2: Análisis Estático (depende del job "build")
  static_analysis:
    runs-on: ubuntu-latest
    needs: build  # Este job solo se ejecutará si el job de "build" tiene éxito

    steps:
      # Configura Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'  # O puedes usar 'temurin' o 'adopt'
          java-version: '17'

      - name: Checkout code
        uses: actions/checkout@v3

      # Configura Android SDK (opcional si necesitas volver a configurarlo)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: '33.0.0'
          cmake-version: '3.10.2'

      # Ejecutar lint y análisis estático
      - name: Run Lint
        run: ./gradlew lint --no-daemon

      # (Opcional) Ejecutar otras herramientas de análisis estático como Detekt o Ktlint
      # - name: Run Detekt
      #   run: ./gradlew detekt --no-daemon

  # Job 3: Pruebas (depende de "build" y "static_analysis")
  tests:
    runs-on: ubuntu-latest
    needs: [build, static_analysis]  # Solo se ejecutará si "build" y "static_analysis" tienen éxito

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'  # O puedes usar 'temurin' o 'adopt'
          java-version: '17'

      - name: Checkout code
        uses: actions/checkout@v3

      # Configura Android SDK (opcional si necesitas volver a configurarlo)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: '33.0.0'
          cmake-version: '3.10.2'

      # Ejecutar pruebas unitarias
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest --no-daemon

      # (Opcional) Ejecutar pruebas instrumentadas
      # - name: Run Instrumentation Tests
      #   run: ./gradlew connectedDebugAndroidTest --no-daemon
